swagger: '2.0'
info:
  description: First API specifications.
  version: '1.0'
  title: AMT Account Manager
host: localhost:8080
basePath: /api
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

security:
  - Bearer: []

paths:
  /unicorns:
    post:
      description: Add a new unicorn.
      operationId: addUnicorn
      consumes:
        - application/json
      parameters:
        - name: unicorn
          in: body
          required: true
          schema:
            $ref: '#/definitions/SimpleUnicorn'
      responses:
        201:
          description: Unicorn successfully created.
        401:
          description: Invalid or missing token.
        409:
          description: Unicorn already exists.

    get:
      description: Get the list of all unicorns.
      operationId: getUnicorns
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          default: 1
          required: false
          type: integer
          minimum: 1
        - name: numberPerPage
          in: query
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 50
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/SimpleUnicorn'
        401:
          description: Invalid or missing token.

  /unicorns/{name}:
    get:
      description: Returns a unicorn by its name.
      operationId: getUnicornByName
      produces:
        - application/json
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: fullView
          in: query
          default: false
          required: false
          type: boolean
        - name: pageNumber
          in: query
          default: 1
          required: false
          type: integer
          minimum: 1
        - name: numberPerPage
          in: query
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 50
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Unicorn'
        401:
          description: Invalid or missing token.
        403:
          description: Forbidden.
        404:
          description: Unicorn not found.

    put:
      description: Update a unicorn.
      operationId: updateUnicorn
      consumes:
        - application/json
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: unicorn
          in: body
          required: true
          schema:
            $ref: '#/definitions/SimpleUnicorn'
      responses:
        200:
          description: Unicorn successfully updated.
        401:
          description: Invalid or missing token.
        403:
          description: Forbidden.
        404:
          description: Unicorn not found.

    delete:
      description: Delete a unicorn.
      operationId: deleteUnicorn
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        200:
          description: Unicorn successfully deleted.
        401:
          description: Invalid or missing token.
        403:
          description: Forbidden.
        404:
          description: Unicorn not found.


  /magics:
    post:
      description: Add a new magic.
      operationId: addMagic
      consumes:
        - application/json
      parameters:
        - name: magic
          in: body
          required: true
          schema:
            $ref: '#/definitions/SimpleMagic'
      responses:
        201:
          description: Magic successfully created.
        401:
          description: Invalid or missing token.
        409:
          description: Magic already exists.

    get:
      description: Get the list of all magics.
      operationId: getMagics
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          default: 1
          required: false
          type: integer
          minimum: 1
        - name: numberPerPage
          in: query
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 50
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/SimpleMagic'
        401:
          description: Invalid or missing token.

  /magics/{name}:
    get:
      description: Returns a magic by its name.
      operationId: getMagicByName
      produces:
        - application/json
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: fullView
          in: query
          default: false
          required: false
          type: boolean
        - name: pageNumber
          in: query
          default: 1
          required: false
          type: integer
          minimum: 1
        - name: numberPerPage
          in: query
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 50
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Magic'
        401:
          description: Invalid or missing token.
        403:
          description: Forbidden.
        404:
          description: Magic not found.

    put:
      description: Update a magic.
      operationId: updateMagic
      consumes:
        - application/json
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: magic
          in: body
          required: true
          schema:
            $ref: '#/definitions/SimpleMagic'
      responses:
        200:
          description: Magic succesfully deleted.
        401:
          description: Invalid or missing token.
        403:
          description: Forbidden.
        404:
          description: Magic not found.

    delete:
      description: Delete a magic.
      operationId: deleteMagic
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        200:
          description: Magic successfully deleted.
        401:
          description: Invalid or missing token.
        403:
          description: Forbidden.
        404:
          description: Magic not found.

  /magicorn:
    post:
      description: Add/remove a relation between a unicorn and a magic.
      operationId: changeMagicorn
      consumes:
        - application/json
      parameters:
        - name: operation
          in: body
          required: true
          schema:
            $ref: '#/definitions/Magicorn'
      responses:
        201:
          description: Successfull operation.
        401:
          description: Invalid or missing token.


definitions:
  SimpleUnicorn:
    type: object
    properties:
      name:
        type: string
      color:
        type: string
      hasWings:
        type: boolean
      speed:
        type: integer

  SimpleMagic:
    type: object
    properties:
      name:
        type: string
      spell:
        type: string
      power:
        type: integer

  Unicorn:
    type: object
    properties:
      name:
        type: string
      color:
        type: string
      hasWings:
        type: boolean
      speed:
        type: integer
      magics:
        type: array
        items:
          $ref: '#/definitions/Magic'

  Magic:
    type: object
    properties:
      name:
        type: string
      spell:
        type: string
      power:
        type: integer
      unicorns:
        type: array
        items:
          $ref: '#/definitions/Unicorn'

  Magicorn:
    type: object
    properties:
      operation:
        type: string
      unicorn:
        type: string
      magic:
        type: string